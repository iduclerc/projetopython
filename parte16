def delete_recipe(recipes):
    clear_screen()
    print("Excluir Receita\n")
    view_recipes(recipes)
    try:
        index = int(input("Digite o número da receita que deseja excluir: ")) - 1
        if 0 <= index < len(recipes):
            confirm = input(f"Tem certeza que deseja excluir '{recipes[index].name}'? (S/N): ").strip().lower()
            if confirm == 's':
                del recipes[index]
                write_recipes_to_csv(recipes, "recipes.csv")
                input("\nReceita excluída com sucesso! Pressione Enter para continuar.")
        else:
            input("\nNúmero de receita inválido. Pressione Enter para continuar.")
    except ValueError:
        input("\nEntrada inválida. Pressione Enter para continuar.")

def filter_by_country(recipes):
    clear_screen()
    print("Filtrar Receitas por País\n")
    country = input("Digite o país que deseja filtrar: ").strip().capitalize()
    filtered_recipes = [recipe for recipe in recipes if recipe.country.lower() == country.lower()]
    if filtered_recipes:
        view_recipes(filtered_recipes)
    else:
        input("\nNenhuma receita encontrada para o país especificado. Pressione Enter para continuar.")

def list_favorite_recipes(recipes):
    clear_screen()
    print("Lista de Receitas Favoritas\n")
    favorite_recipes = [recipe for recipe in recipes if recipe.favorite]
    if favorite_recipes:
        for index, recipe in enumerate(favorite_recipes, start=1):
            print(f"{index}. {recipe.name} - {recipe.country}")
            print("Ingredientes:", ', '.join(recipe.ingredients))
            print("Instruções:", recipe.instructions)
            print("Favorita: Sim")
            print(f"Nota Média: {recipe.average_rating():.1f}")
            print("-----------------------")
    else:
        print("Nenhuma receita favorita encontrada.")
    input("\nPressione Enter para continuar.")

def random_recipe(recipes):
    clear_screen()
    print("Receita Aleatória\n")
    if recipes:
        recipe = random.choice(recipes)
        print(recipe)
    else:
        print("Nenhuma receita disponível.")
    input("\nPressione Enter para continuar.")

def rate_recipe(recipes):
    clear_screen()
    print("Dar Nota à Receita\n")
    view_recipes(recipes)
    try:
        index = int(input("Digite o número da receita que deseja dar uma nota: ")) - 1
        if 0 <= index < len(recipes):
            rating = int(input("Digite a nota (1-5): "))
            if 1 <= rating <= 5:
                recipes[index].add_rating(rating)
                write_recipes_to_csv(recipes, "recipes.csv")
                input("\nNota adicionada com sucesso! Pressione Enter para continuar.")
            else:
                input("\nNota inválida. Pressione Enter para continuar.")
        else:
            input("\nNúmero de receita inválido. Pressione Enter para continuar.")
    except ValueError:
        input("\nEntrada inválida. Pressione Enter para continuar.")

def main():
    filename = "recipes.csv"
    if not os.path.exists(filename):
        open(filename, "w", encoding='utf-8').close()

    recipes = read_recipes_from_csv(filename)

    while True:
        display_menu()
        choice = input("Escolha uma opção: ")
        if choice == '1':
            add_recipe(recipes)
        elif choice == '2':
            view_recipes(recipes)
        elif choice == '3':
            update_recipe(recipes)
        elif choice == '4':
            delete_recipe(recipes)
        elif choice == '5':
            filter_by_country(recipes)
        elif choice == '6':
            list_favorite_recipes(recipes)
        elif choice == '7':
            random_recipe(recipes)
        elif choice == '8':
            rate_recipe(recipes)
        elif choice == '9':
            print("Saindo do sistema...")
            break
        else:
            input("Opção inválida. Pressione Enter para continuar.")

if _name_ == "_main_":
    main()
    part
